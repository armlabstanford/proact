<launch>

    <!-- <arg name="debug" default="false" /> -->

    <!-- GAZEBO arguments -->
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="false" />
    <arg name="gazebo_gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="false" />
    <arg name="default_world" default="true" />

    <arg name="arm_origin_x" default="-0.39"/>
    <arg name="arm_origin_y" default="0.12"/>
    <arg name="arm_origin_z" default="1.5"/>

    <arg name="urdf_file" default="$(find mpl_description)/mpl_right_arm_by_moveit.urdf"/>
    <!-- <arg name="urdf_file" default="$(find mpl_description)/mpl_right_arm_by_moveit_effort_controllers.urdf"/> -->

    <!-- <arg name="mpl_right_arm__elbow_initial" default="0.3291"/> -->
    <arg name="mpl_right_arm__elbow_initial" default="0.1291"/>
    <!-- <arg name="mpl_right_arm__forearm_initial" default="1.305"/> -->
    <!-- <arg name="mpl_right_arm__forearm_initial" default="1.505"/> -->
    <!-- <arg name="mpl_right_arm__forearm_initial" default="2.0"/> -->
    <arg name="mpl_right_arm__forearm_initial" default="1.029"/>
    <arg name="mpl_right_arm__humerus_initial" default="-0.161"/>
    <!-- <arg name="mpl_right_arm__shoulder_initial" default="0.3449"/> -->
    <!-- <arg name="mpl_right_arm__shoulder_initial" default="0.1449"/> -->
    <arg name="mpl_right_arm__shoulder_initial" default="1.029"/>
    <arg name="mpl_right_arm__wristx_initial" default="0.0174"/>
    <arg name="mpl_right_arm__wristy_initial" default="1.57"/>
    <arg name="mpl_right_arm__wristz_initial" default="0.1006"/>

   <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="paused" value="true"/>
      <arg name="verbose" value="true"/>
      <arg name="gui" value="$(arg gazebo_gui)"/>
    </include>

    <!-- load descriptions into param server -->
    <param name="robot_description" command="$(find xacro)/xacro $(arg urdf_file)" />
    <!-- <param name="block_description" command="$(find xacro)/xacro $(find box_blocks_experiment)/models/block.urdf" /> -->
    <param name="red_block_description" command="$(find xacro)/xacro $(find box_blocks_experiment)/models/red_block.urdf" />
    <param name="blue_block_description" command="$(find xacro)/xacro $(find box_blocks_experiment)/models/blue_block.urdf" />
    <param name="table_description" command="$(find xacro)/xacro $(find box_blocks_experiment)/models/bbt_box.urdf" />

    <!-- unpause only after loading robot model -->
    <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />


    <!--PID gains for gazebo_ros_control-->
    <rosparam file="$(find mpl_control)/config/mpl_controllers_config.yaml" command="load" />

    <rosparam file="$(find mpl_control)/config/PID_gains.yaml" command="load" />

    <!-- Spawn robot model in Gazebo -->
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model mpl_right_arm  -J mpl_right_arm__humerus $(arg mpl_right_arm__humerus_initial)  -J mpl_right_arm__shoulder $(arg mpl_right_arm__shoulder_initial)  -J mpl_right_arm__forearm $(arg mpl_right_arm__forearm_initial)  -J mpl_right_arm__elbow $(arg mpl_right_arm__elbow_initial)  -J mpl_right_arm__wristx $(arg mpl_right_arm__wristx_initial)  -J mpl_right_arm__wristy $(arg mpl_right_arm__wristy_initial)  -J mpl_right_arm__wristz $(arg mpl_right_arm__wristz_initial) -unpause  -x $(arg arm_origin_x) -y $(arg arm_origin_y) -z $(arg arm_origin_z)"/>

    <!-- <param name="move_group/trajectory_execution/allowed_execution_duration_scaling" value="4.0" /> -->
    <param name="move_group/trajectory_execution/execution_duration_monitoring" value="false" />

    <!-- load the controllers for MoveGroup -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/mpl_right_arm" respawn="true" output="screen" args="joint_state_controller hand_controller arm_controller">
    <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="/mpl_right_arm" respawn="true" output="screen" args="joint_state_controller hand_controller shoulder_controller elbow_controller wrist_zx_controller wrist_y_controller"> -->
    </node>

    <!-- make joint angles from gazebo lie in acceptable range for moveit -->
    <node name="joint_state_wrapper" pkg="topic_utils" type="wrap_joint_angles.py" respawn="true" output="screen"/>

    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="true" output="screen">
    <!-- <param name= "ignore_timestamp" value="true"/> -->
    <remap from="/joint_states" to="/mpl_right_arm/wrapped_joint_states" />
    </node>

    <!-- launch moveit -->
    <include file="$(find mpl_moveit_config)/launch/move_group.launch">
    <!-- inside here there's a remapping for joint states! -->
        <arg name="allow_trajectory_execution" value="true"/>
        <arg name="info" value="true"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- launch rviz -->
    <include file="$(find mpl_moveit_config)/launch/moveit_rviz.launch">
        <arg name="rviz_config" value="$(find mpl_control)/config/moveit_mpl.rviz"/>
        <arg name="debug" value="$(arg debug)"/>
    </include>

    <!-- add table to tf tree -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="match_tablerefs" args="0 0 0 0 0 1.57 world table_frame"/> -->

    <!-- set arm base at shoulder in hololens -->
    <!-- <node unless="$(arg testing)" pkg="shoulder_localization" name="arm_base_pose_publish" type="arm_placer" output="screen"/> -->

    <!-- <node unless="$(arg testing)" name ="arm_base_pose_publish" pkg="shoulder_localization" type="tf2posemsg.py" args="/mpl_right_arm/base_pose hololens_world base_link"/> -->

     <!-- <node name="gazebo2rviz" pkg="mpl_control" type="object_pose_publisher.py" args="table ground_plane table_pose_msg"/> -->

    <!-- <node name="colliders" pkg="box_blocks_experiment" type="collision_env.py"/> -->


</launch>
